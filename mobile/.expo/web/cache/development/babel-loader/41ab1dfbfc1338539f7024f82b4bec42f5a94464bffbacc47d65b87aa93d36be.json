{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ChatScreen from \"./ChatScreen\";\nimport ReviewTicketScreen from \"./ReviewTicketScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ChatFlowRouter() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showReview = _useState4[0],\n    setShowReview = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatHistory = _useState6[0],\n    setChatHistory = _useState6[1];\n  var handleChatUpdate = function handleChatUpdate(newMessages, fullTranscript) {\n    setMessages(newMessages);\n    setChatHistory(fullTranscript);\n    var highConfidence = newMessages.some(function (m) {\n      return m.role === 'assistant' && m.content.toLowerCase().includes('confidence: 85') || m.content.toLowerCase().includes('high confidence');\n    });\n    if (highConfidence) {\n      setShowReview(true);\n    }\n  };\n  var handleManualSubmit = function handleManualSubmit() {\n    setShowReview(true);\n  };\n  var handleRFQSubmit = function handleRFQSubmit(editedTicket) {\n    console.log('Submitted Ticket:', editedTicket);\n    setShowReview(false);\n  };\n  return showReview ? _jsx(ReviewTicketScreen, {\n    chatHistory: chatHistory,\n    onSubmit: handleRFQSubmit,\n    onBack: function onBack() {\n      return setShowReview(false);\n    }\n  }) : _jsx(ChatScreen, {\n    messages: messages,\n    onUpdate: handleChatUpdate,\n    onManualSubmit: handleManualSubmit\n  });\n}","map":{"version":3,"names":["React","useState","ChatScreen","ReviewTicketScreen","jsx","_jsx","ChatFlowRouter","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","showReview","setShowReview","_useState5","_useState6","chatHistory","setChatHistory","handleChatUpdate","newMessages","fullTranscript","highConfidence","some","m","role","content","toLowerCase","includes","handleManualSubmit","handleRFQSubmit","editedTicket","console","log","onSubmit","onBack","onUpdate","onManualSubmit"],"sources":["/Users/michaelverwaayen/RFQ/mobile/ReviewTicketScreen.js"],"sourcesContent":["// === ChatFlowRouter.js ===\n// Handles chat logic, detects confidence, and routes to ReviewTicketScreen\n\nimport React, { useState } from 'react';\nimport ChatScreen from './ChatScreen';\nimport ReviewTicketScreen from './ReviewTicketScreen';\n\nexport default function ChatFlowRouter() {\n  const [messages, setMessages] = useState([]);\n  const [showReview, setShowReview] = useState(false);\n  const [chatHistory, setChatHistory] = useState('');\n\n  const handleChatUpdate = (newMessages, fullTranscript) => {\n    setMessages(newMessages);\n    setChatHistory(fullTranscript);\n\n    // Auto-trigger review if confidence message appears\n    const highConfidence = newMessages.some(m => m.role === 'assistant' && m.content.toLowerCase().includes('confidence: 85') || m.content.toLowerCase().includes('high confidence'));\n    if (highConfidence) {\n      setShowReview(true);\n    }\n  };\n\n  const handleManualSubmit = () => {\n    setShowReview(true);\n  };\n\n  const handleRFQSubmit = (editedTicket) => {\n    // You would post the final RFQ to your backend here (e.g. /submit-rfq)\n    console.log('Submitted Ticket:', editedTicket);\n    setShowReview(false);\n  };\n\n  return showReview ? (\n    <ReviewTicketScreen\n      chatHistory={chatHistory}\n      onSubmit={handleRFQSubmit}\n      onBack={() => setShowReview(false)}\n    />\n  ) : (\n    <ChatScreen\n      messages={messages}\n      onUpdate={handleChatUpdate}\n      onManualSubmit={handleManualSubmit}\n    />\n  );\n}\n"],"mappings":";AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU;AACjB,OAAOC,kBAAkB;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAEtD,eAAe,SAASC,cAAcA,CAAA,EAAG;EACvC,IAAAC,SAAA,GAAgCN,QAAQ,CAAC,EAAE,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAoCX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAsCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,WAAW,EAAEC,cAAc,EAAK;IACxDX,WAAW,CAACU,WAAW,CAAC;IACxBF,cAAc,CAACG,cAAc,CAAC;IAG9B,IAAMC,cAAc,GAAGF,WAAW,CAACG,IAAI,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACC,IAAI,KAAK,WAAW,IAAID,CAAC,CAACE,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,gBAAgB,CAAC,IAAIJ,CAAC,CAACE,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,iBAAiB,CAAC;IAAA,EAAC;IACjL,IAAIN,cAAc,EAAE;MAClBR,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,IAAMe,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAC/Bf,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,IAAMgB,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,YAAY,EAAK;IAExCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,YAAY,CAAC;IAC9CjB,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,OAAOD,UAAU,GACfT,IAAA,CAACF,kBAAkB;IACjBe,WAAW,EAAEA,WAAY;IACzBiB,QAAQ,EAAEJ,eAAgB;IAC1BK,MAAM,EAAE,SAARA,MAAMA,CAAA;MAAA,OAAQrB,aAAa,CAAC,KAAK,CAAC;IAAA;EAAC,CACpC,CAAC,GAEFV,IAAA,CAACH,UAAU;IACTQ,QAAQ,EAAEA,QAAS;IACnB2B,QAAQ,EAAEjB,gBAAiB;IAC3BkB,cAAc,EAAER;EAAmB,CACpC,CACF;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}