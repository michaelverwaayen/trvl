{"ast":null,"code":"import { PermissionStatus, Platform } from 'expo-modules-core';\nfunction convertPermissionStatus(status) {\n  switch (status) {\n    case 'granted':\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: false,\n        granted: true\n      };\n    case 'denied':\n      return {\n        status: PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: false,\n        granted: false\n      };\n    default:\n      return {\n        status: PermissionStatus.UNDETERMINED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false\n      };\n  }\n}\nasync function resolvePermissionAsync({\n  shouldAsk\n}) {\n  if (!Platform.isDOMAvailable) {\n    return convertPermissionStatus('denied');\n  }\n  const {\n    Notification = {}\n  } = window;\n  if (typeof Notification.requestPermission !== 'undefined') {\n    let status = Notification.permission;\n    if (shouldAsk) {\n      status = await new Promise((resolve, reject) => {\n        let resolved = false;\n        function resolveOnce(status) {\n          if (!resolved) {\n            resolved = true;\n            resolve(status);\n          }\n        }\n        Notification.requestPermission(resolveOnce)?.then(resolveOnce)?.catch(reject);\n      });\n    }\n    return convertPermissionStatus(status);\n  } else if (typeof navigator !== 'undefined' && navigator?.permissions?.query) {\n    const query = await navigator.permissions.query({\n      name: 'notifications'\n    });\n    return convertPermissionStatus(query.state);\n  }\n  return convertPermissionStatus('denied');\n}\nexport default {\n  addListener: () => {},\n  removeListeners: () => {},\n  async getPermissionsAsync() {\n    return resolvePermissionAsync({\n      shouldAsk: false\n    });\n  },\n  async requestPermissionsAsync(request) {\n    return resolvePermissionAsync({\n      shouldAsk: true\n    });\n  }\n};","map":{"version":3,"names":["PermissionStatus","Platform","convertPermissionStatus","status","GRANTED","expires","canAskAgain","granted","DENIED","UNDETERMINED","resolvePermissionAsync","shouldAsk","isDOMAvailable","Notification","window","requestPermission","permission","Promise","resolve","reject","resolved","resolveOnce","then","catch","navigator","permissions","query","name","state","addListener","removeListeners","getPermissionsAsync","requestPermissionsAsync","request"],"sources":["/Users/michaelverwaayen/RFQ/mobile/node_modules/expo-notifications/src/NotificationPermissionsModule.ts"],"sourcesContent":["import { PermissionStatus, Platform } from 'expo-modules-core';\n\nimport {\n  NativeNotificationPermissionsRequest,\n  NotificationPermissionsStatus,\n} from './NotificationPermissions.types';\nimport { NotificationPermissionsModule } from './NotificationPermissionsModule.types';\n\nfunction convertPermissionStatus(\n  status?: NotificationPermission | 'prompt'\n): NotificationPermissionsStatus {\n  switch (status) {\n    case 'granted':\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: false,\n        granted: true,\n      };\n    case 'denied':\n      return {\n        status: PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: false,\n        granted: false,\n      };\n    default:\n      return {\n        status: PermissionStatus.UNDETERMINED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n  }\n}\n\nasync function resolvePermissionAsync({\n  shouldAsk,\n}: {\n  shouldAsk: boolean;\n}): Promise<NotificationPermissionsStatus> {\n  if (!Platform.isDOMAvailable) {\n    return convertPermissionStatus('denied');\n  }\n\n  const { Notification = {} } = window as any;\n  if (typeof Notification.requestPermission !== 'undefined') {\n    let status = Notification.permission;\n    if (shouldAsk) {\n      status = await new Promise((resolve, reject) => {\n        let resolved = false;\n        function resolveOnce(status: string) {\n          if (!resolved) {\n            resolved = true;\n            resolve(status);\n          }\n        }\n        // Some browsers require a callback argument and some return a Promise\n        Notification.requestPermission(resolveOnce)?.then(resolveOnce)?.catch(reject);\n      });\n    }\n    return convertPermissionStatus(status);\n  } else if (typeof navigator !== 'undefined' && navigator?.permissions?.query) {\n    // TODO(Bacon): Support `push` in the future when it's stable.\n    const query = await navigator.permissions.query({ name: 'notifications' });\n    return convertPermissionStatus(query.state);\n  }\n  // Platforms like iOS Safari don't support Notifications so return denied.\n  return convertPermissionStatus('denied');\n}\n\nexport default {\n  addListener: () => {},\n  removeListeners: () => {},\n  async getPermissionsAsync(): Promise<NotificationPermissionsStatus> {\n    return resolvePermissionAsync({ shouldAsk: false });\n  },\n  async requestPermissionsAsync(\n    request: NativeNotificationPermissionsRequest\n  ): Promise<NotificationPermissionsStatus> {\n    return resolvePermissionAsync({ shouldAsk: true });\n  },\n} as NotificationPermissionsModule;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,QAAQ,QAAQ,mBAAmB;AAQ9D,SAASC,uBAAuBA,CAC9BC,MAA0C;EAE1C,QAAQA,MAAM;IACZ,KAAK,SAAS;MACZ,OAAO;QACLA,MAAM,EAAEH,gBAAgB,CAACI,OAAO;QAChCC,OAAO,EAAE,OAAO;QAChBC,WAAW,EAAE,KAAK;QAClBC,OAAO,EAAE;OACV;IACH,KAAK,QAAQ;MACX,OAAO;QACLJ,MAAM,EAAEH,gBAAgB,CAACQ,MAAM;QAC/BH,OAAO,EAAE,OAAO;QAChBC,WAAW,EAAE,KAAK;QAClBC,OAAO,EAAE;OACV;IACH;MACE,OAAO;QACLJ,MAAM,EAAEH,gBAAgB,CAACS,YAAY;QACrCJ,OAAO,EAAE,OAAO;QAChBC,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAE;OACV;EACL;AACF;AAEA,eAAeG,sBAAsBA,CAAC;EACpCC;AAAS,CAGV;EACC,IAAI,CAACV,QAAQ,CAACW,cAAc,EAAE;IAC5B,OAAOV,uBAAuB,CAAC,QAAQ,CAAC;EAC1C;EAEA,MAAM;IAAEW,YAAY,GAAG;EAAE,CAAE,GAAGC,MAAa;EAC3C,IAAI,OAAOD,YAAY,CAACE,iBAAiB,KAAK,WAAW,EAAE;IACzD,IAAIZ,MAAM,GAAGU,YAAY,CAACG,UAAU;IACpC,IAAIL,SAAS,EAAE;MACbR,MAAM,GAAG,MAAM,IAAIc,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;QAC7C,IAAIC,QAAQ,GAAG,KAAK;QACpB,SAASC,WAAWA,CAAClB,MAAc;UACjC,IAAI,CAACiB,QAAQ,EAAE;YACbA,QAAQ,GAAG,IAAI;YACfF,OAAO,CAACf,MAAM,CAAC;UACjB;QACF;QAEAU,YAAY,CAACE,iBAAiB,CAACM,WAAW,CAAC,EAAEC,IAAI,CAACD,WAAW,CAAC,EAAEE,KAAK,CAACJ,MAAM,CAAC;MAC/E,CAAC,CAAC;IACJ;IACA,OAAOjB,uBAAuB,CAACC,MAAM,CAAC;EACxC,CAAC,MAAM,IAAI,OAAOqB,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAEC,WAAW,EAAEC,KAAK,EAAE;IAE5E,MAAMA,KAAK,GAAG,MAAMF,SAAS,CAACC,WAAW,CAACC,KAAK,CAAC;MAAEC,IAAI,EAAE;IAAe,CAAE,CAAC;IAC1E,OAAOzB,uBAAuB,CAACwB,KAAK,CAACE,KAAK,CAAC;EAC7C;EAEA,OAAO1B,uBAAuB,CAAC,QAAQ,CAAC;AAC1C;AAEA,eAAe;EACb2B,WAAW,EAAEA,CAAA,KAAK,CAAE,CAAC;EACrBC,eAAe,EAAEA,CAAA,KAAK,CAAE,CAAC;EACzB,MAAMC,mBAAmBA,CAAA;IACvB,OAAOrB,sBAAsB,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAE,CAAC;EACrD,CAAC;EACD,MAAMqB,uBAAuBA,CAC3BC,OAA6C;IAE7C,OAAOvB,sBAAsB,CAAC;MAAEC,SAAS,EAAE;IAAI,CAAE,CAAC;EACpD;CACgC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}