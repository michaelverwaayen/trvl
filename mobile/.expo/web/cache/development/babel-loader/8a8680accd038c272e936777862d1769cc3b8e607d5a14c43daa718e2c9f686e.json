{"ast":null,"code":"var _jsxFileName = \"/Users/michaelverwaayen/RFQ/mobile/ChatRoom.js\";\nimport React, { useEffect, useState } from 'react';\nimport Constants from 'expo-constants';\nimport { supabase } from './supabase';\nimport { OPENAI_API_KEY } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatRoom({\n  chatRoomId,\n  sender\n}) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const {\n        data\n      } = await supabase.from('chat_messages').select('*').eq('chat_room_id', chatRoomId).order('created_at');\n      setMessages(data || []);\n    };\n    const channel = supabase.channel(`chat-${chatRoomId}`).on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'chat_messages'\n    }, payload => {\n      setMessages(prev => [...prev, payload.new]);\n    }).subscribe();\n    fetchMessages();\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [chatRoomId]);\n  useEffect(() => {\n    const fetchQuoteStatus = async () => {\n      const {\n        data\n      } = await supabase.from('quotes').select('*').eq('log_id', chatRoomId).eq('status', 'accepted').maybeSingle();\n      if (data) {\n        setMessages(prev => [...prev, {\n          id: 'system-accepted',\n          sender: 'system',\n          message: '✅ Your job has been accepted!'\n        }]);\n      }\n    };\n    fetchQuoteStatus();\n  }, [chatRoomId]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    await supabase.from('chat_messages').insert({\n      chat_room_id: chatRoomId,\n      sender,\n      message: input\n    });\n    setInput('');\n  };\n  return _jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [_jsxDEV(\"h2\", {\n      children: \"Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      style: {\n        maxHeight: 300,\n        overflowY: 'scroll',\n        border: '1px solid #ccc',\n        padding: 10\n      },\n      children: messages.map(msg => _jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0'\n        },\n        children: [_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, msg.id || Math.random(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), _jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message...\",\n      style: {\n        width: '80%',\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), _jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","Constants","supabase","OPENAI_API_KEY","jsxDEV","_jsxDEV","ChatRoom","chatRoomId","sender","messages","setMessages","input","setInput","fetchMessages","data","from","select","eq","order","channel","on","event","schema","table","payload","prev","new","subscribe","removeChannel","fetchQuoteStatus","maybeSingle","id","message","sendMessage","trim","insert","chat_room_id","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflowY","border","map","msg","margin","Math","random","value","onChange","e","target","placeholder","width","marginRight","onClick"],"sources":["/Users/michaelverwaayen/RFQ/mobile/ChatRoom.js"],"sourcesContent":["// === ChatRoom.js ===\nimport React, { useEffect, useState } from 'react';\nimport Constants from 'expo-constants';\nimport { supabase } from './supabase'; // or '../supabase'\nimport { OPENAI_API_KEY } from './config';\n\n\n\n\nexport default function ChatRoom({ chatRoomId, sender }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const { data } = await supabase\n        .from('chat_messages')\n        .select('*')\n        .eq('chat_room_id', chatRoomId)\n        .order('created_at');\n      setMessages(data || []);\n    };\n\n    const channel = supabase\n      .channel(`chat-${chatRoomId}`)\n      .on(\n        'postgres_changes',\n        { event: 'INSERT', schema: 'public', table: 'chat_messages' },\n        payload => {\n          setMessages(prev => [...prev, payload.new]);\n        }\n      )\n      .subscribe();\n\n    fetchMessages();\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [chatRoomId]);\n\n  useEffect(() => {\n    const fetchQuoteStatus = async () => {\n      const { data } = await supabase\n        .from('quotes')\n        .select('*')\n        .eq('log_id', chatRoomId)\n        .eq('status', 'accepted')\n        .maybeSingle();\n\n      if (data) {\n        setMessages(prev => [\n          ...prev,\n          { id: 'system-accepted', sender: 'system', message: '✅ Your job has been accepted!' }\n        ]);\n      }\n    };\n\n    fetchQuoteStatus();\n  }, [chatRoomId]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    await supabase.from('chat_messages').insert({\n      chat_room_id: chatRoomId,\n      sender,\n      message: input\n    });\n    setInput('');\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Live Chat</h2>\n      <div style={{ maxHeight: 300, overflowY: 'scroll', border: '1px solid #ccc', padding: 10 }}>\n        {messages.map(msg => (\n          <div key={msg.id || Math.random()} style={{ margin: '10px 0' }}>\n            <strong>{msg.sender}:</strong> {msg.message}\n          </div>\n        ))}\n      </div>\n      <input\n        value={input}\n        onChange={e => setInput(e.target.value)}\n        placeholder=\"Type a message...\"\n        style={{ width: '80%', marginRight: 10 }}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}