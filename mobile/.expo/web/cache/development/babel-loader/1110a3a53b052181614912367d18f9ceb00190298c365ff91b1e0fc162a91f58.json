{"ast":null,"code":"var _jsxFileName = \"/Users/michaelverwaayen/RFQ/mobile/RegisterScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { useAuth } from './AuthContext';\nimport { supabase } from './supabase';\nimport { useTheme } from './ThemeContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RegisterScreen({\n  navigation\n}) {\n  const {\n    signUp\n  } = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('');\n  const [isVendor, setIsVendor] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const {\n    theme\n  } = useTheme();\n  const styles = getStyles(theme);\n  const handleRegister = async () => {\n    setLoading(true);\n    const {\n      data,\n      error\n    } = await signUp(email, password);\n    if (error) {\n      alert(error.message);\n      setLoading(false);\n      return;\n    }\n    alert('Check your email to confirm your account.');\n    const pollForConfirmation = setInterval(async () => {\n      const {\n        data: userData,\n        error: userError\n      } = await supabase.auth.getUser();\n      const confirmed = userData?.user?.email_confirmed_at;\n      if (confirmed) {\n        clearInterval(pollForConfirmation);\n        console.log(\"✅ Email confirmed\");\n        if (isVendor) {\n          const {\n            error: insertError\n          } = await supabase.from('vendors').insert([{\n            id: userData.user.id,\n            email,\n            name,\n            category\n          }]);\n          if (insertError) {\n            console.error('Vendor creation failed:', insertError.message);\n            alert('Vendor profile creation failed.');\n          }\n        }\n        setLoading(false);\n        navigation.navigate('Login');\n      } else {\n        console.log(\"Waiting for confirmation...\");\n      }\n    }, 3000);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.header,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      value: email,\n      onChangeText: setEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.switchRow,\n      children: [_jsxDEV(Text, {\n        style: {\n          color: theme.text\n        },\n        children: \"Register as Vendor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), _jsxDEV(Switch, {\n        value: isVendor,\n        onValueChange: setIsVendor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), isVendor && _jsxDEV(_Fragment, {\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Name\",\n        value: name,\n        onChangeText: setName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Category\",\n        value: category,\n        onChangeText: setCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), loading && _jsxDEV(ActivityIndicator, {\n      style: {\n        marginVertical: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }, this), _jsxDEV(Button, {\n      title: \"Register\",\n      onPress: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\nconst getStyles = theme => StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: theme.background\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.text\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.border,\n    padding: 10,\n    borderRadius: 6,\n    marginBottom: 10,\n    color: theme.text\n  },\n  switchRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","ActivityIndicator","Switch","useAuth","supabase","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterScreen","navigation","signUp","email","setEmail","password","setPassword","name","setName","category","setCategory","isVendor","setIsVendor","loading","setLoading","theme","styles","getStyles","handleRegister","data","error","alert","message","pollForConfirmation","setInterval","userData","userError","auth","getUser","confirmed","user","email_confirmed_at","clearInterval","console","log","insertError","from","insert","id","navigate","style","container","children","header","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","autoCapitalize","keyboardType","value","onChangeText","secureTextEntry","switchRow","color","text","onValueChange","marginVertical","title","onPress","create","flex","padding","backgroundColor","background","fontSize","fontWeight","marginBottom","borderWidth","borderColor","border","borderRadius","flexDirection","alignItems","justifyContent"],"sources":["/Users/michaelverwaayen/RFQ/mobile/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, ActivityIndicator, Switch } from 'react-native';\nimport { useAuth } from './AuthContext';\nimport { supabase } from './supabase';\nimport { useTheme } from './ThemeContext';\n\nexport default function RegisterScreen({ navigation }) {\n  const { signUp } = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('');\n  const [isVendor, setIsVendor] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { theme } = useTheme();\n  const styles = getStyles(theme);\n\nconst handleRegister = async () => {\n  setLoading(true);\n\n  // Sign up\n  const { data, error } = await signUp(email, password);\n\n  if (error) {\n    alert(error.message);\n    setLoading(false);\n    return;\n  }\n\n  alert('Check your email to confirm your account.');\n\n  // Poll until the user is confirmed\n  const pollForConfirmation = setInterval(async () => {\n    const { data: userData, error: userError } = await supabase.auth.getUser();\n    const confirmed = userData?.user?.email_confirmed_at;\n\n    if (confirmed) {\n      clearInterval(pollForConfirmation);\n      console.log(\"✅ Email confirmed\");\n\n      // Optional: insert vendor profile after confirmation\n      if (isVendor) {\n        const { error: insertError } = await supabase.from('vendors').insert([{\n          id: userData.user.id,\n          email,\n          name,\n          category\n        }]);\n\n        if (insertError) {\n          console.error('Vendor creation failed:', insertError.message);\n          alert('Vendor profile creation failed.');\n        }\n      }\n\n      setLoading(false);\n      navigation.navigate('Login'); // or navigate to dashboard\n    } else {\n      console.log(\"Waiting for confirmation...\");\n    }\n  }, 3000); // poll every 3 seconds\n};\n\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Register</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n        value={email}\n        onChangeText={setEmail}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n      />\n      <View style={styles.switchRow}>\n        <Text style={{ color: theme.text }}>Register as Vendor</Text>\n        <Switch value={isVendor} onValueChange={setIsVendor} />\n      </View>\n      {isVendor && (\n        <>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Name\"\n            value={name}\n            onChangeText={setName}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Category\"\n            value={category}\n            onChangeText={setCategory}\n          />\n        </>\n      )}\n      {loading && <ActivityIndicator style={{ marginVertical: 10 }} />}\n      <Button title=\"Register\" onPress={handleRegister} />\n    </View>\n  );\n}\n\nconst getStyles = theme =>\n  StyleSheet.create({\n    container: { flex: 1, padding: 20, backgroundColor: theme.background },\n    header: { fontSize: 24, fontWeight: 'bold', marginBottom: 10, color: theme.text },\n    input: { borderWidth: 1, borderColor: theme.border, padding: 10, borderRadius: 6, marginBottom: 10, color: theme.text },\n    switchRow: { flexDirection: 'row', alignItems: 'center', marginBottom: 10, justifyContent: 'space-between' }\n  });\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}