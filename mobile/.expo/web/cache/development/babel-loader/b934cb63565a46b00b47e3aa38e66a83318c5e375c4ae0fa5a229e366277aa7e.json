{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport NotificationPresenter from './NotificationPresenterModule';\nexport default async function dismissNotificationAsync(notificationIdentifier) {\n  if (!NotificationPresenter.dismissNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'dismissNotificationAsync');\n  }\n  return await NotificationPresenter.dismissNotificationAsync(notificationIdentifier);\n}","map":{"version":3,"names":["UnavailabilityError","NotificationPresenter","dismissNotificationAsync","notificationIdentifier"],"sources":["/Users/michaelverwaayen/RFQ/mobile/node_modules/expo-notifications/src/dismissNotificationAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\n\n/**\n * Removes notification displayed in the notification tray (Notification Center).\n * @param notificationIdentifier The notification identifier, obtained either via `setNotificationHandler` method or in the listener added with `addNotificationReceivedListener`.\n * @return A Promise which resolves once the request to dismiss the notification is successfully dispatched to the notifications manager.\n * @header dismiss\n */\nexport default async function dismissNotificationAsync(\n  notificationIdentifier: string\n): Promise<void> {\n  if (!NotificationPresenter.dismissNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'dismissNotificationAsync');\n  }\n\n  return await NotificationPresenter.dismissNotificationAsync(notificationIdentifier);\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB,MAAM,+BAA+B;AAQjE,eAAe,eAAeC,wBAAwBA,CACpDC,sBAA8B;EAE9B,IAAI,CAACF,qBAAqB,CAACC,wBAAwB,EAAE;IACnD,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,0BAA0B,CAAC;EAC5E;EAEA,OAAO,MAAMC,qBAAqB,CAACC,wBAAwB,CAACC,sBAAsB,CAAC;AACrF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}