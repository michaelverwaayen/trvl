{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { mapNotification } from './utils/mapNotificationResponse';\nexport default async function getPresentedNotificationsAsync() {\n  if (!NotificationPresenter.getPresentedNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getPresentedNotificationsAsync');\n  }\n  return (await NotificationPresenter.getPresentedNotificationsAsync()).map(notification => mapNotification(notification));\n}","map":{"version":3,"names":["UnavailabilityError","NotificationPresenter","mapNotification","getPresentedNotificationsAsync","map","notification"],"sources":["/Users/michaelverwaayen/RFQ/mobile/node_modules/expo-notifications/src/getPresentedNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { Notification } from './Notifications.types';\nimport { mapNotification } from './utils/mapNotificationResponse';\n\n/**\n * Fetches information about all notifications present in the notification tray (Notification Center).\n * > This method is not supported on Android below 6.0 (API level 23) â€“ on these devices it will resolve to an empty array.\n * @return A Promise which resolves with a list of notifications ([`Notification`](#notification)) currently present in the notification tray (Notification Center).\n * @header dismiss\n */\nexport default async function getPresentedNotificationsAsync(): Promise<Notification[]> {\n  if (!NotificationPresenter.getPresentedNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getPresentedNotificationsAsync');\n  }\n\n  return (await NotificationPresenter.getPresentedNotificationsAsync()).map((notification) =>\n    mapNotification(notification)\n  );\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB,MAAM,+BAA+B;AAEjE,SAASC,eAAe,QAAQ,iCAAiC;AAQjE,eAAe,eAAeC,8BAA8BA,CAAA;EAC1D,IAAI,CAACF,qBAAqB,CAACE,8BAA8B,EAAE;IACzD,MAAM,IAAIH,mBAAmB,CAAC,eAAe,EAAE,gCAAgC,CAAC;EAClF;EAEA,OAAO,CAAC,MAAMC,qBAAqB,CAACE,8BAA8B,EAAE,EAAEC,GAAG,CAAEC,YAAY,IACrFH,eAAe,CAACG,YAAY,CAAC,CAC9B;AACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}