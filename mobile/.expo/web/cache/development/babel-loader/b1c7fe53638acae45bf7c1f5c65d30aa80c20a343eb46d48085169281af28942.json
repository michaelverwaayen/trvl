{"ast":null,"code":"var _jsxFileName = \"/Users/michaelverwaayen/RFQ/mobile/VendorChatRoom.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { supabase } from './supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VendorChatRoom({\n  route\n}) {\n  const {\n    chatRoomId,\n    vendorEmail\n  } = route.params || {};\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [quote, setQuote] = useState('');\n  const [availability, setAvailability] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const {\n        data\n      } = await supabase.from('chat_messages').select('*').eq('chat_room_id', chatRoomId).order('created_at');\n      setMessages(data || []);\n    };\n    const channel = supabase.channel(`chat-${chatRoomId}`).on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'chat_messages'\n    }, payload => {\n      setMessages(prev => [...prev, payload.new]);\n    }).subscribe();\n    fetchMessages();\n    return () => supabase.removeChannel(channel);\n  }, [chatRoomId]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    await supabase.from('chat_messages').insert({\n      chat_room_id: chatRoomId,\n      sender: vendorEmail,\n      message: input\n    });\n    setInput('');\n  };\n  const submitQuote = async () => {\n    if (!quote || !availability) return;\n    const {\n      error\n    } = await supabase.from('quotes').insert({\n      log_id: chatRoomId,\n      vendor_email: vendorEmail,\n      quote,\n      availability,\n      status: 'submitted'\n    });\n    if (!error) {\n      alert('Quote submitted!');\n      setQuote('');\n      setAvailability('');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.header,\n      children: \"Chat with Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.messages,\n      children: messages.map(msg => _jsxDEV(View, {\n        style: styles.message,\n        children: _jsxDEV(Text, {\n          children: [_jsxDEV(Text, {\n            style: styles.bold,\n            children: [msg.sender === vendorEmail ? 'You' : 'Customer', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), \" \", msg.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.inputRow,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        value: input,\n        onChangeText: setInput,\n        placeholder: \"Type your reply...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Send\",\n        onPress: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.quoteSection,\n      children: [_jsxDEV(Text, {\n        style: styles.subHeader,\n        children: \"Submit Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        value: quote,\n        onChangeText: setQuote,\n        placeholder: \"Quote $\",\n        keyboardType: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        value: availability,\n        onChangeText: setAvailability,\n        placeholder: \"Availability (YYYY-MM-DD)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Submit\",\n        onPress: submitQuote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  messages: {\n    maxHeight: 300,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10\n  },\n  message: {\n    marginVertical: 5\n  },\n  bold: {\n    fontWeight: 'bold'\n  },\n  inputRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 8,\n    marginRight: 10\n  },\n  quoteSection: {\n    marginTop: 20\n  },\n  subHeader: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","TextInput","Button","StyleSheet","supabase","jsxDEV","_jsxDEV","VendorChatRoom","route","chatRoomId","vendorEmail","params","messages","setMessages","input","setInput","quote","setQuote","availability","setAvailability","fetchMessages","data","from","select","eq","order","channel","on","event","schema","table","payload","prev","new","subscribe","removeChannel","sendMessage","trim","insert","chat_room_id","sender","message","submitQuote","error","log_id","vendor_email","status","alert","style","styles","container","children","header","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","bold","id","inputRow","value","onChangeText","placeholder","title","onPress","quoteSection","subHeader","keyboardType","create","flex","padding","fontSize","fontWeight","marginBottom","maxHeight","borderWidth","borderColor","marginVertical","flexDirection","alignItems","marginTop","marginRight"],"sources":["/Users/michaelverwaayen/RFQ/mobile/VendorChatRoom.js"],"sourcesContent":["// === VendorChatRoom.js ===\n\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, ScrollView, TextInput, Button, StyleSheet } from 'react-native';\nimport { supabase } from './supabase';\n\nexport default function VendorChatRoom({ route }) {\n  const { chatRoomId, vendorEmail } = route.params || {};\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [quote, setQuote] = useState('');\n  const [availability, setAvailability] = useState('');\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const { data } = await supabase\n        .from('chat_messages')\n        .select('*')\n        .eq('chat_room_id', chatRoomId)\n        .order('created_at');\n      setMessages(data || []);\n    };\n\n    const channel = supabase\n      .channel(`chat-${chatRoomId}`)\n      .on('postgres_changes', {\n        event: 'INSERT',\n        schema: 'public',\n        table: 'chat_messages',\n      }, payload => {\n        setMessages(prev => [...prev, payload.new]);\n      })\n      .subscribe();\n\n    fetchMessages();\n    return () => supabase.removeChannel(channel);\n  }, [chatRoomId]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    await supabase.from('chat_messages').insert({\n      chat_room_id: chatRoomId,\n      sender: vendorEmail,\n      message: input\n    });\n    setInput('');\n  };\n\n  const submitQuote = async () => {\n    if (!quote || !availability) return;\n    const { error } = await supabase.from('quotes').insert({\n      log_id: chatRoomId,\n      vendor_email: vendorEmail,\n      quote,\n      availability,\n      status: 'submitted'\n    });\n    if (!error) {\n      alert('Quote submitted!');\n      setQuote('');\n      setAvailability('');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Chat with Customer</Text>\n      <ScrollView style={styles.messages}>\n        {messages.map(msg => (\n          <View key={msg.id} style={styles.message}>\n            <Text>\n              <Text style={styles.bold}>{msg.sender === vendorEmail ? 'You' : 'Customer'}:</Text> {msg.message}\n            </Text>\n          </View>\n        ))}\n      </ScrollView>\n      <View style={styles.inputRow}>\n        <TextInput\n          style={styles.input}\n          value={input}\n          onChangeText={setInput}\n          placeholder=\"Type your reply...\"\n        />\n        <Button title=\"Send\" onPress={sendMessage} />\n      </View>\n\n      <View style={styles.quoteSection}>\n        <Text style={styles.subHeader}>Submit Quote</Text>\n        <TextInput\n          style={styles.input}\n          value={quote}\n          onChangeText={setQuote}\n          placeholder=\"Quote $\"\n          keyboardType=\"numeric\"\n        />\n        <TextInput\n          style={styles.input}\n          value={availability}\n          onChangeText={setAvailability}\n          placeholder=\"Availability (YYYY-MM-DD)\"\n        />\n        <Button title=\"Submit\" onPress={submitQuote} />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 20 },\n  header: { fontSize: 20, fontWeight: 'bold', marginBottom: 10 },\n  messages: { maxHeight: 300, borderWidth: 1, borderColor: '#ccc', padding: 10 },\n  message: { marginVertical: 5 },\n  bold: { fontWeight: 'bold' },\n  inputRow: { flexDirection: 'row', alignItems: 'center', marginTop: 10 },\n  input: { flex: 1, borderWidth: 1, borderColor: '#ccc', padding: 8, marginRight: 10 },\n  quoteSection: { marginTop: 20 },\n  subHeader: { fontSize: 16, fontWeight: 'bold', marginBottom: 10 }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}