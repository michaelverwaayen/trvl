{"ast":null,"code":"var _jsxFileName = \"/Users/michaelverwaayen/RFQ/mobile/ChatScreen.js\";\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport React, { useState, useEffect, useRef } from 'react';\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { SERVER_URL } from './config';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport axios from 'axios';\nimport ChatRoom from './ChatRoom';\nimport { useTheme } from './ThemeContext';\nimport { supabase } from './supabase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatScreen() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sending, setSending] = useState(false);\n  const [urgentChatId, setUrgentChatId] = useState(null);\n  const [inUrgentChat, setInUrgentChat] = useState(false);\n  const [showCategoryDropdown, setShowCategoryDropdown] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const {\n    theme\n  } = useTheme();\n  const styles = getStyles(theme);\n  const sessionIdRef = useRef(uuidv4());\n  useEffect(() => {\n    const fetchCategories = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('vendors').select('category').neq('category', '');\n      if (data) {\n        const uniqueCategories = [...new Set(data.map(v => v.category))];\n        setCategories(uniqueCategories);\n      }\n    };\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    const loadMessages = async () => {\n      const {\n        data\n      } = await supabase.from('chat_messages').select('*').eq('chat_room_id', sessionIdRef.current).order('created_at');\n      if (data) setMessages(data);\n    };\n    loadMessages();\n  }, []);\n  const sendMessage = async (text = null, image = null) => {\n    if (!text && !image) return;\n    let query = '';\n    try {\n      query = new URLSearchParams({\n        text: text || '',\n        image: image || ''\n      }).toString();\n    } catch (e) {\n      console.error('❌ Failed to build query string:', e);\n      return;\n    }\n    if (image && !image.startsWith('data:image/')) {\n      console.warn('⚠️ Invalid image format submitted.');\n      return;\n    }\n    const userMessage = {\n      role: 'user',\n      type: image ? 'image' : 'text',\n      content: text || image,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    supabase.from('chat_messages').insert({\n      chat_room_id: sessionIdRef.current,\n      sender: 'user',\n      message: text || image || ''\n    });\n    setInput('');\n    setSending(true);\n    try {\n      const eventSource = new EventSourcePolyfill(`http://localhost:3000/chat?${query}`);\n      let fullResponse = '';\n      let done = false;\n      const timeoutId = setTimeout(() => {\n        if (!done) {\n          console.warn('⏰ SSE timed out. Closing connection.');\n          eventSource.close();\n          setSending(false);\n          setMessages(prev => [...prev, {\n            role: 'assistant',\n            type: 'text',\n            content: 'Sorry, the server timed out.',\n            timestamp: new Date().toISOString()\n          }]);\n          supabase.from('chat_messages').insert({\n            chat_room_id: sessionIdRef.current,\n            sender: 'assistant',\n            message: 'Sorry, the server timed out.'\n          });\n        }\n      }, 30000);\n      let firstAssistantChunk = true;\n      eventSource.onmessage = event => {\n        if (done) return;\n        if (event.data === '[DONE]') {\n          done = true;\n          clearTimeout(timeoutId);\n          setSending(false);\n          eventSource.close();\n          supabase.from('chat_messages').insert({\n            chat_room_id: sessionIdRef.current,\n            sender: 'assistant',\n            message: fullResponse\n          });\n          return;\n        }\n        fullResponse += event.data;\n        setMessages(prev => {\n          const last = prev[prev.length - 1];\n          if (!firstAssistantChunk && last?.role === 'assistant') {\n            return [...prev.slice(0, -1), Object.assign({}, last, {\n              content: fullResponse\n            })];\n          }\n          firstAssistantChunk = false;\n          return [...prev, {\n            role: 'assistant',\n            type: 'text',\n            content: event.data,\n            timestamp: new Date().toISOString()\n          }];\n        });\n      };\n      eventSource.onerror = e => {\n        if (!done) {\n          console.error('🔥 SSE stream error:', e);\n          setMessages(prev => [...prev, {\n            role: 'assistant',\n            type: 'text',\n            content: 'There was a connection issue. Please try again.',\n            timestamp: new Date().toISOString()\n          }]);\n          supabase.from('chat_messages').insert({\n            chat_room_id: sessionIdRef.current,\n            sender: 'assistant',\n            message: 'There was a connection issue. Please try again.'\n          });\n          clearTimeout(timeoutId);\n          setSending(false);\n          eventSource.close();\n        }\n      };\n    } catch (err) {\n      console.error('❌ Error sending message:', err);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        type: 'text',\n        content: 'Something went wrong. Please try again.',\n        timestamp: new Date().toISOString()\n      }]);\n      supabase.from('chat_messages').insert({\n        chat_room_id: sessionIdRef.current,\n        sender: 'assistant',\n        message: 'Something went wrong. Please try again.'\n      });\n      setSending(false);\n    }\n  };\n  const handleGetHelpNow = async () => {\n    if (!showCategoryDropdown) {\n      setShowCategoryDropdown(true);\n      return;\n    }\n    if (!selectedCategory) {\n      alert('Please select a category.');\n      return;\n    }\n    const fullTranscript = messages.map(m => m.content).join('\\n');\n    try {\n      const res = await axios.post('http://localhost:3000/dispatch_urgent_vendor', {\n        chat_history: fullTranscript,\n        category: selectedCategory\n      });\n      if (res.data.success && res.data.chat_room_id) {\n        console.log('🚀 Urgent chat initiated:', res.data.chat_room_id);\n        setUrgentChatId(res.data.chat_room_id);\n        setInUrgentChat(true);\n      } else {\n        alert('No vendor available right now. Continuing with RFQ.');\n      }\n    } catch (err) {\n      console.error('Urgent dispatch failed:', err);\n      alert('Something went wrong while dispatching.');\n    }\n  };\n  const pickImage = async () => {\n    const result = await ImagePicker.launchCameraAsync({\n      base64: true\n    });\n    if (!result.canceled) {\n      const base64Image = `data:image/jpeg;base64,${result.assets[0].base64}`;\n      sendMessage(null, base64Image);\n    }\n  };\n  const renderItem = ({\n    item,\n    index\n  }) => _jsxDEV(View, {\n    style: [styles.message, item.role === 'user' ? styles.user : styles.assistant],\n    children: [item.type === 'image' && item.content ? _jsxDEV(Image, {\n      source: {\n        uri: item.content\n      },\n      style: styles.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this) : _jsxDEV(Text, {\n      style: item.role === 'user' ? styles.userText : styles.assistantText,\n      children: item.content || '⚠️ Empty message'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), item.timestamp && _jsxDEV(Text, {\n      style: styles.timestamp,\n      children: new Date(item.timestamp).toLocaleTimeString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)]\n  }, item.id || index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n  if (inUrgentChat && urgentChatId) {\n    return _jsxDEV(ChatRoom, {\n      chatRoomId: urgentChatId,\n      sender: \"user@example.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 12\n    }, this);\n  }\n  return _jsxDEV(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    keyboardVerticalOffset: 100,\n    children: [_jsxDEV(FlatList, {\n      data: messages,\n      renderItem: renderItem,\n      keyExtractor: (item, idx) => item.id?.toString() || idx.toString(),\n      contentContainerStyle: {\n        paddingBottom: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.inputRow,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Describe your issue...\",\n        value: input,\n        onChangeText: setInput,\n        editable: !sending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Send\",\n        onPress: () => sendMessage(input),\n        disabled: sending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: pickImage,\n        style: styles.imageBtn,\n        children: _jsxDEV(Text, {\n          style: {\n            fontSize: 20\n          },\n          children: \"\\uD83D\\uDCF7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), showCategoryDropdown && _jsxDEV(Picker, {\n      selectedValue: selectedCategory,\n      onValueChange: itemValue => setSelectedCategory(itemValue),\n      style: {\n        marginTop: 10,\n        color: theme.text,\n        backgroundColor: theme.card\n      },\n      children: [_jsxDEV(Picker.Item, {\n        label: \"Select a category\",\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), categories.map((cat, idx) => _jsxDEV(Picker.Item, {\n        label: cat,\n        value: cat\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this), sending && _jsxDEV(ActivityIndicator, {\n      style: {\n        marginTop: 10\n      },\n      size: \"small\",\n      color: theme.primary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}\nconst getStyles = theme => StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    paddingTop: 50,\n    backgroundColor: theme.background\n  },\n  message: {\n    padding: 10,\n    marginVertical: 5,\n    borderRadius: 8,\n    maxWidth: '80%'\n  },\n  user: {\n    alignSelf: 'flex-end',\n    backgroundColor: theme.primary\n  },\n  assistant: {\n    alignSelf: 'flex-start',\n    backgroundColor: theme.card\n  },\n  inputRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: theme.border,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 5,\n    color: theme.text\n  },\n  image: {\n    width: 150,\n    height: 150,\n    borderRadius: 8\n  },\n  imageBtn: {\n    marginLeft: 5,\n    padding: 8\n  },\n  manualRow: {\n    marginTop: 10\n  },\n  userText: {\n    color: '#FFFFFF',\n    textAlign: 'right'\n  },\n  assistantText: {\n    color: '#FFA500',\n    textAlign: 'left'\n  },\n  timestamp: {\n    fontSize: 10,\n    color: theme.text,\n    marginTop: 4,\n    textAlign: 'right'\n  }\n});","map":{"version":3,"names":["EventSourcePolyfill","React","useState","useEffect","useRef","Picker","SERVER_URL","View","TextInput","Button","FlatList","Text","Image","StyleSheet","TouchableOpacity","KeyboardAvoidingView","Platform","ActivityIndicator","ImagePicker","axios","ChatRoom","useTheme","supabase","v4","uuidv4","jsxDEV","_jsxDEV","ChatScreen","messages","setMessages","input","setInput","sending","setSending","urgentChatId","setUrgentChatId","inUrgentChat","setInUrgentChat","showCategoryDropdown","setShowCategoryDropdown","categories","setCategories","selectedCategory","setSelectedCategory","theme","styles","getStyles","sessionIdRef","fetchCategories","data","error","from","select","neq","uniqueCategories","Set","map","v","category","loadMessages","eq","current","order","sendMessage","text","image","query","URLSearchParams","toString","e","console","startsWith","warn","userMessage","role","type","content","timestamp","Date","toISOString","prev","insert","chat_room_id","sender","message","eventSource","fullResponse","done","timeoutId","setTimeout","close","firstAssistantChunk","onmessage","event","clearTimeout","last","length","slice","Object","assign","onerror","err","handleGetHelpNow","alert","fullTranscript","m","join","res","post","chat_history","success","log","pickImage","result","launchCameraAsync","base64","canceled","base64Image","assets","renderItem","item","index","style","user","assistant","children","source","uri","fileName","_jsxFileName","lineNumber","columnNumber","userText","assistantText","toLocaleTimeString","id","chatRoomId","container","behavior","OS","undefined","keyboardVerticalOffset","keyExtractor","idx","contentContainerStyle","paddingBottom","inputRow","placeholder","value","onChangeText","editable","title","onPress","disabled","imageBtn","fontSize","selectedValue","onValueChange","itemValue","marginTop","color","backgroundColor","card","Item","label","cat","size","primary","create","flex","padding","paddingTop","background","marginVertical","borderRadius","maxWidth","alignSelf","flexDirection","alignItems","borderWidth","borderColor","border","marginRight","width","height","marginLeft","manualRow","textAlign"],"sources":["/Users/michaelverwaayen/RFQ/mobile/ChatScreen.js"],"sourcesContent":["import { EventSourcePolyfill } from 'event-source-polyfill';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Picker } from 'react-native';\nimport { SERVER_URL } from './config';\nimport {\n  View,\n  TextInput,\n  Button,\n  FlatList,\n  Text,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n  ActivityIndicator\n} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport axios from 'axios';\nimport ChatRoom from './ChatRoom';\nimport { useTheme } from './ThemeContext';\nimport { supabase } from './supabase';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function ChatScreen() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sending, setSending] = useState(false);\n  const [urgentChatId, setUrgentChatId] = useState(null);\n  const [inUrgentChat, setInUrgentChat] = useState(false);\n  const [showCategoryDropdown, setShowCategoryDropdown] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const { theme } = useTheme();\n  const styles = getStyles(theme);\n  const sessionIdRef = useRef(uuidv4());\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      const { data, error } = await supabase.from('vendors').select('category').neq('category', '');\n      if (data) {\n        const uniqueCategories = [...new Set(data.map(v => v.category))];\n        setCategories(uniqueCategories);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    const loadMessages = async () => {\n      const { data } = await supabase\n        .from('chat_messages')\n        .select('*')\n        .eq('chat_room_id', sessionIdRef.current)\n        .order('created_at');\n      if (data) setMessages(data);\n    };\n    loadMessages();\n  }, []);\n\n  const sendMessage = async (text = null, image = null) => {\n    if (!text && !image) return;\n\n    let query = '';\n    try {\n      query = new URLSearchParams({\n        text: text || '',\n        image: image || '',\n      }).toString();\n    } catch (e) {\n      console.error('❌ Failed to build query string:', e);\n      return;\n    }\n\n    if (image && !image.startsWith('data:image/')) {\n      console.warn('⚠️ Invalid image format submitted.');\n      return;\n    }\n\n    const userMessage = {\n      role: 'user',\n      type: image ? 'image' : 'text',\n      content: text || image,\n      timestamp: new Date().toISOString(),\n    };\n    setMessages(prev => [...prev, userMessage]);\n    supabase.from('chat_messages').insert({\n      chat_room_id: sessionIdRef.current,\n      sender: 'user',\n      message: text || image || ''\n    });\n    setInput('');\n    setSending(true);\n\n    try {\n      const eventSource = new EventSourcePolyfill(\n        `http://localhost:3000/chat?${query}`\n      );\n\n      let fullResponse = '';\n      let done = false;\n\n      const timeoutId = setTimeout(() => {\n        if (!done) {\n          console.warn('⏰ SSE timed out. Closing connection.');\n          eventSource.close();\n          setSending(false);\n          setMessages(prev => [\n            ...prev,\n            {\n              role: 'assistant',\n              type: 'text',\n              content: 'Sorry, the server timed out.',\n              timestamp: new Date().toISOString(),\n            },\n          ]);\n          supabase.from('chat_messages').insert({\n            chat_room_id: sessionIdRef.current,\n            sender: 'assistant',\n            message: 'Sorry, the server timed out.'\n          });\n        }\n      }, 30000);\n\n      let firstAssistantChunk = true;\n      eventSource.onmessage = (event) => {\n        if (done) return;\n        if (event.data === '[DONE]') {\n          done = true;\n          clearTimeout(timeoutId);\n          setSending(false);\n          eventSource.close();\n          supabase.from('chat_messages').insert({\n            chat_room_id: sessionIdRef.current,\n            sender: 'assistant',\n            message: fullResponse\n          });\n          return;\n        }\n\n        fullResponse += event.data;\n        setMessages(prev => {\n          const last = prev[prev.length - 1];\n          if (!firstAssistantChunk && last?.role === 'assistant') {\n            return [...prev.slice(0, -1), { ...last, content: fullResponse }];\n          }\n          firstAssistantChunk = false;\n          return [\n            ...prev,\n            {\n              role: 'assistant',\n              type: 'text',\n              content: event.data,\n              timestamp: new Date().toISOString(),\n            },\n          ];\n        });\n      };\n\n      eventSource.onerror = (e) => {\n        if (!done) {\n          console.error('🔥 SSE stream error:', e);\n          setMessages(prev => [\n            ...prev,\n            {\n              role: 'assistant',\n              type: 'text',\n              content: 'There was a connection issue. Please try again.',\n              timestamp: new Date().toISOString(),\n            },\n          ]);\n          supabase.from('chat_messages').insert({\n            chat_room_id: sessionIdRef.current,\n            sender: 'assistant',\n            message: 'There was a connection issue. Please try again.'\n          });\n          clearTimeout(timeoutId);\n          setSending(false);\n          eventSource.close();\n        }\n      };\n    } catch (err) {\n      console.error('❌ Error sending message:', err);\n      setMessages(prev => [\n        ...prev,\n        {\n          role: 'assistant',\n          type: 'text',\n          content: 'Something went wrong. Please try again.',\n          timestamp: new Date().toISOString(),\n        },\n      ]);\n      supabase.from('chat_messages').insert({\n        chat_room_id: sessionIdRef.current,\n        sender: 'assistant',\n        message: 'Something went wrong. Please try again.'\n      });\n      setSending(false);\n    }\n  };\n\n  const handleGetHelpNow = async () => {\n    if (!showCategoryDropdown) {\n      setShowCategoryDropdown(true);\n      return;\n    }\n\n    if (!selectedCategory) {\n      alert('Please select a category.');\n      return;\n    }\n\n    const fullTranscript = messages.map(m => m.content).join('\\n');\n    try {\n      const res = await axios.post('http://localhost:3000/dispatch_urgent_vendor', {\n  chat_history: fullTranscript,\n  category: selectedCategory  // ✅ ADD THIS LINE\n});\n\n      if (res.data.success && res.data.chat_room_id) {\n        console.log('🚀 Urgent chat initiated:', res.data.chat_room_id);\n        setUrgentChatId(res.data.chat_room_id);\n        setInUrgentChat(true);\n      } else {\n        alert('No vendor available right now. Continuing with RFQ.');\n      }\n    } catch (err) {\n      console.error('Urgent dispatch failed:', err);\n      alert('Something went wrong while dispatching.');\n    }\n  };\n\n  const pickImage = async () => {\n    const result = await ImagePicker.launchCameraAsync({ base64: true });\n    if (!result.canceled) {\n      const base64Image = `data:image/jpeg;base64,${result.assets[0].base64}`;\n      sendMessage(null, base64Image);\n    }\n  };\n\n  const renderItem = ({ item, index }) => (\n    <View\n      key={item.id || index}\n      style={[styles.message, item.role === 'user' ? styles.user : styles.assistant]}\n    >\n      {item.type === 'image' && item.content ? (\n        <Image source={{ uri: item.content }} style={styles.image} />\n      ) : (\n        <Text style={item.role === 'user' ? styles.userText : styles.assistantText}>\n          {item.content || '⚠️ Empty message'}\n        </Text>\n      )}\n      {item.timestamp && (\n        <Text style={styles.timestamp}>\n          {new Date(item.timestamp).toLocaleTimeString()}\n        </Text>\n      )}\n    </View>\n  );\n\n  if (inUrgentChat && urgentChatId) {\n    return <ChatRoom chatRoomId={urgentChatId} sender=\"user@example.com\" />;\n  }\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n      keyboardVerticalOffset={100}\n    >\n      <FlatList\n        data={messages}\n        renderItem={renderItem}\n        keyExtractor={(item, idx) => item.id?.toString() || idx.toString()}\n        contentContainerStyle={{ paddingBottom: 20 }}\n      />\n      <View style={styles.inputRow}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Describe your issue...\"\n          value={input}\n          onChangeText={setInput}\n          editable={!sending}\n        />\n        <Button title=\"Send\" onPress={() => sendMessage(input)} disabled={sending} />\n        <TouchableOpacity onPress={pickImage} style={styles.imageBtn}>\n          <Text style={{ fontSize: 20 }}>📷</Text>\n        </TouchableOpacity>\n      </View>\n\n      {showCategoryDropdown && (\n        <Picker\n          selectedValue={selectedCategory}\n          onValueChange={(itemValue) => setSelectedCategory(itemValue)}\n          style={{ marginTop: 10, color: theme.text, backgroundColor: theme.card }}\n        >\n          <Picker.Item label=\"Select a category\" value=\"\" />\n          {categories.map((cat, idx) => (\n            <Picker.Item key={idx} label={cat} value={cat} />\n          ))}\n        </Picker>\n      )}\n\n    \n\n      {sending && <ActivityIndicator style={{ marginTop: 10 }} size=\"small\" color={theme.primary} />}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst getStyles = (theme) =>\n  StyleSheet.create({\n    container: { flex: 1, padding: 10, paddingTop: 50, backgroundColor: theme.background },\n    message: { padding: 10, marginVertical: 5, borderRadius: 8, maxWidth: '80%' },\n    user: { alignSelf: 'flex-end', backgroundColor: theme.primary },\n    assistant: { alignSelf: 'flex-start', backgroundColor: theme.card },\n    inputRow: { flexDirection: 'row', alignItems: 'center', marginTop: 10 },\n    input: { flex: 1, borderWidth: 1, borderColor: theme.border, borderRadius: 5, padding: 10, marginRight: 5, color: theme.text },\n    image: { width: 150, height: 150, borderRadius: 8 },\n    imageBtn: { marginLeft: 5, padding: 8 },\n    manualRow: { marginTop: 10 },\n    userText: { color: '#FFFFFF', textAlign: 'right' },\n    assistantText: { color: '#FFA500', textAlign: 'left' },\n    timestamp: { fontSize: 10, color: theme.text, marginTop: 4, textAlign: 'right' },\n  });\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}