{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport NotificationCategoriesModule from './NotificationCategoriesModule';\nexport default async function setNotificationCategoryAsync(identifier, actions, options) {\n  if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n    throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n  }\n  return await NotificationCategoriesModule.setNotificationCategoryAsync(identifier, actions, options);\n}","map":{"version":3,"names":["UnavailabilityError","NotificationCategoriesModule","setNotificationCategoryAsync","identifier","actions","options"],"sources":["/Users/michaelverwaayen/RFQ/mobile/node_modules/expo-notifications/src/setNotificationCategoryAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationCategoriesModule from './NotificationCategoriesModule';\nimport {\n  NotificationCategory,\n  NotificationAction,\n  NotificationCategoryOptions,\n} from './Notifications.types';\n\n/**\n * Sets the new notification category.\n * @param identifier A string to associate as the ID of this category. You will pass this string in as the `categoryIdentifier`\n * in your [`NotificationContent`](#notificationcontent) to associate a notification with this category.\n * > Don't use the characters `:` or `-` in your category identifier. If you do, categories might not work as expected.\n * @param actions An array of [`NotificationAction`](#notificationaction), which describe the actions associated with this category.\n * @param options An optional object of additional configuration options for your category.\n * @return A Promise which resolves to the category you just have created.\n * @platform android\n * @platform ios\n * @header categories\n */\nexport default async function setNotificationCategoryAsync(\n  identifier: string,\n  actions: NotificationAction[],\n  options?: NotificationCategoryOptions\n): Promise<NotificationCategory> {\n  if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n    throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n  }\n\n  return await NotificationCategoriesModule.setNotificationCategoryAsync(\n    identifier,\n    actions,\n    options\n  );\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,4BAA4B,MAAM,gCAAgC;AAmBzE,eAAe,eAAeC,4BAA4BA,CACxDC,UAAkB,EAClBC,OAA6B,EAC7BC,OAAqC;EAErC,IAAI,CAACJ,4BAA4B,CAACC,4BAA4B,EAAE;IAC9D,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,8BAA8B,CAAC;EAChF;EAEA,OAAO,MAAMC,4BAA4B,CAACC,4BAA4B,CACpEC,UAAU,EACVC,OAAO,EACPC,OAAO,CACR;AACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}