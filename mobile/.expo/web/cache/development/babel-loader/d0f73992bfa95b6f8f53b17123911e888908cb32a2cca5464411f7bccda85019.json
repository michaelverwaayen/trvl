{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport NotificationScheduler from './NotificationScheduler';\nimport { mapNotificationRequest } from './utils/mapNotificationResponse';\nexport default async function getAllScheduledNotificationsAsync() {\n  if (!NotificationScheduler.getAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n  }\n  return (await NotificationScheduler.getAllScheduledNotificationsAsync()).map(request => mapNotificationRequest(request));\n}","map":{"version":3,"names":["UnavailabilityError","NotificationScheduler","mapNotificationRequest","getAllScheduledNotificationsAsync","map","request"],"sources":["/Users/michaelverwaayen/RFQ/mobile/node_modules/expo-notifications/src/getAllScheduledNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { NotificationRequest } from './Notifications.types';\nimport { mapNotificationRequest } from './utils/mapNotificationResponse';\n\n/**\n * Fetches information about all scheduled notifications.\n * @return Returns a Promise resolving to an array of objects conforming to the [`Notification`](#notification) interface.\n * @header schedule\n */\nexport default async function getAllScheduledNotificationsAsync(): Promise<NotificationRequest[]> {\n  if (!NotificationScheduler.getAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n  }\n\n  return (await NotificationScheduler.getAllScheduledNotificationsAsync()).map((request) =>\n    mapNotificationRequest(request)\n  );\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB,MAAM,yBAAyB;AAE3D,SAASC,sBAAsB,QAAQ,iCAAiC;AAOxE,eAAe,eAAeC,iCAAiCA,CAAA;EAC7D,IAAI,CAACF,qBAAqB,CAACE,iCAAiC,EAAE;IAC5D,MAAM,IAAIH,mBAAmB,CAAC,eAAe,EAAE,mCAAmC,CAAC;EACrF;EAEA,OAAO,CAAC,MAAMC,qBAAqB,CAACE,iCAAiC,EAAE,EAAEC,GAAG,CAAEC,OAAO,IACnFH,sBAAsB,CAACG,OAAO,CAAC,CAChC;AACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}