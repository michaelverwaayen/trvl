{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport NotificationScheduler from './NotificationScheduler';\nexport default async function cancelAllScheduledNotificationsAsync() {\n  if (!NotificationScheduler.cancelAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'cancelAllScheduledNotificationsAsync');\n  }\n  return await NotificationScheduler.cancelAllScheduledNotificationsAsync();\n}","map":{"version":3,"names":["UnavailabilityError","NotificationScheduler","cancelAllScheduledNotificationsAsync"],"sources":["/Users/michaelverwaayen/RFQ/mobile/node_modules/expo-notifications/src/cancelAllScheduledNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\n\n/**\n * Cancels all scheduled notifications.\n * @return A Promise that resolves once all the scheduled notifications are successfully canceled, or if there are no scheduled notifications.\n * @header schedule\n */\nexport default async function cancelAllScheduledNotificationsAsync(): Promise<void> {\n  if (!NotificationScheduler.cancelAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'cancelAllScheduledNotificationsAsync');\n  }\n\n  return await NotificationScheduler.cancelAllScheduledNotificationsAsync();\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB,MAAM,yBAAyB;AAO3D,eAAe,eAAeC,oCAAoCA,CAAA;EAChE,IAAI,CAACD,qBAAqB,CAACC,oCAAoC,EAAE;IAC/D,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,sCAAsC,CAAC;EACxF;EAEA,OAAO,MAAMC,qBAAqB,CAACC,oCAAoC,EAAE;AAC3E","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}