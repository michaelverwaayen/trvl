{"ast":null,"code":"var _jsxFileName = \"/Users/michaelverwaayen/RFQ/mobile/ChatScreen.js\";\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport axios from 'axios';\nimport ChatRoom from './ChatRoom';\nimport { useTheme } from './ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatScreen() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sending, setSending] = useState(false);\n  const [urgentChatId, setUrgentChatId] = useState(null);\n  const [inUrgentChat, setInUrgentChat] = useState(false);\n  const {\n    theme\n  } = useTheme();\n  const styles = getStyles(theme);\n  const sendMessage = async (text = null, image = null) => {\n    if (!text && !image) return;\n    let query = '';\n    try {\n      query = new URLSearchParams({\n        text: text || '',\n        image: image || ''\n      }).toString();\n    } catch (e) {\n      console.error('❌ Failed to build query string:', e);\n      return;\n    }\n    if (image && !image.startsWith('data:image/')) {\n      console.warn('⚠️ Invalid image format submitted.');\n      return;\n    }\n    const userMessage = {\n      role: 'user',\n      type: image ? 'image' : 'text',\n      content: text || image\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setSending(true);\n    try {\n      const eventSource = new EventSourcePolyfill(`http://localhost:3000/chat?${query}`);\n      let fullResponse = '';\n      let done = false;\n      const timeoutId = setTimeout(() => {\n        if (!done) {\n          console.warn('⏰ SSE timed out. Closing connection.');\n          eventSource.close();\n          setSending(false);\n          setMessages(prev => [...prev, {\n            role: 'assistant',\n            type: 'text',\n            content: 'Sorry, the server timed out.'\n          }]);\n        }\n      }, 30000);\n      eventSource.onmessage = event => {\n        if (done) return;\n        if (event.data === '[DONE]') {\n          done = true;\n          clearTimeout(timeoutId);\n          setSending(false);\n          eventSource.close();\n          return;\n        }\n        fullResponse += event.data;\n        setMessages(prev => {\n          const last = prev[prev.length - 1];\n          if (last?.role === 'assistant') {\n            return [...prev.slice(0, -1), Object.assign({}, last, {\n              content: fullResponse\n            })];\n          } else {\n            return [...prev, {\n              role: 'assistant',\n              type: 'text',\n              content: event.data\n            }];\n          }\n        });\n      };\n      eventSource.onerror = e => {\n        if (!done) {\n          console.error('🔥 SSE stream error:', e);\n          setMessages(prev => [...prev, {\n            role: 'assistant',\n            type: 'text',\n            content: 'There was a connection issue. Please try again.'\n          }]);\n          clearTimeout(timeoutId);\n          setSending(false);\n          eventSource.close();\n        }\n      };\n    } catch (err) {\n      console.error('❌ Error sending message:', err);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        type: 'text',\n        content: 'Something went wrong. Please try again.'\n      }]);\n      setSending(false);\n    }\n  };\n  const handleGetHelpNow = async () => {\n    const fullTranscript = messages.map(m => m.content).join('\\n');\n    try {\n      const res = await axios.post('https://rfq-a1og.onrender.com/dispatch_urgent_vendor', {\n        chat_history: fullTranscript\n      });\n      if (res.data.success && res.data.chat_room_id) {\n        console.log('🚀 Urgent chat initiated:', res.data.chat_room_id);\n        setUrgentChatId(res.data.chat_room_id);\n        setInUrgentChat(true);\n      } else {\n        alert('No vendor available right now. Continuing with RFQ.');\n      }\n    } catch (err) {\n      console.error('Urgent dispatch failed:', err);\n      alert('Something went wrong while dispatching.');\n    }\n  };\n  const pickImage = async () => {\n    const result = await ImagePicker.launchCameraAsync({\n      base64: true\n    });\n    if (!result.canceled) {\n      const base64Image = `data:image/jpeg;base64,${result.assets[0].base64}`;\n      sendMessage(null, base64Image);\n    }\n  };\n  const renderItem = ({\n    item,\n    index\n  }) => _jsxDEV(View, {\n    style: [styles.message, item.role === 'user' ? styles.user : styles.assistant],\n    children: item.type === 'image' && item.content ? _jsxDEV(Image, {\n      source: {\n        uri: item.content\n      },\n      style: styles.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this) : _jsxDEV(Text, {\n      style: {\n        color: item.role === 'assistant' ? 'orange' : theme.text\n      },\n      children: item.content || '⚠️ Empty message'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)\n  }, item.id || index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n  console.log('Rendering ChatScreen', {\n    messages,\n    sending,\n    inUrgentChat,\n    urgentChatId\n  });\n  if (inUrgentChat && urgentChatId) {\n    console.log('🎯 Entering urgent chat');\n    return _jsxDEV(ChatRoom, {\n      chatRoomId: urgentChatId,\n      sender: \"user@example.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 12\n    }, this);\n  }\n  return _jsxDEV(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    keyboardVerticalOffset: 100,\n    children: [_jsxDEV(FlatList, {\n      data: messages,\n      renderItem: renderItem,\n      keyExtractor: (item, idx) => item.id?.toString() || idx.toString(),\n      contentContainerStyle: {\n        paddingBottom: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.inputRow,\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Describe your issue...\",\n        value: input,\n        onChangeText: setInput,\n        editable: !sending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Send\",\n        onPress: () => sendMessage(input),\n        disabled: sending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: pickImage,\n        style: styles.imageBtn,\n        children: _jsxDEV(Text, {\n          style: {\n            fontSize: 20\n          },\n          children: \"\\uD83D\\uDCF7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.manualRow,\n      children: _jsxDEV(Button, {\n        title: \"\\uD83D\\uDEA8 Get Help Now\",\n        onPress: handleGetHelpNow,\n        disabled: sending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), sending && _jsxDEV(ActivityIndicator, {\n      style: {\n        marginTop: 10\n      },\n      size: \"small\",\n      color: theme.primary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\nconst getStyles = theme => StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    paddingTop: 50,\n    backgroundColor: theme.background\n  },\n  message: {\n    padding: 10,\n    marginVertical: 5,\n    borderRadius: 8,\n    maxWidth: '80%'\n  },\n  user: {\n    alignSelf: 'flex-end',\n    backgroundColor: theme.card\n  },\n  assistant: {\n    alignSelf: 'flex-start',\n    backgroundColor: theme.card\n  },\n  inputRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: theme.border,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 5,\n    color: theme.text\n  },\n  image: {\n    width: 150,\n    height: 150,\n    borderRadius: 8\n  },\n  imageBtn: {\n    marginLeft: 5,\n    padding: 8\n  },\n  manualRow: {\n    marginTop: 10\n  },\n  userText: {\n    color: '#FFFFFF'\n  },\n  assistantText: {\n    color: '#FFA500'\n  }\n});","map":{"version":3,"names":["EventSourcePolyfill","React","useState","View","TextInput","Button","FlatList","Text","Image","StyleSheet","TouchableOpacity","KeyboardAvoidingView","Platform","ActivityIndicator","ImagePicker","axios","ChatRoom","useTheme","jsxDEV","_jsxDEV","ChatScreen","messages","setMessages","input","setInput","sending","setSending","urgentChatId","setUrgentChatId","inUrgentChat","setInUrgentChat","theme","styles","getStyles","sendMessage","text","image","query","URLSearchParams","toString","e","console","error","startsWith","warn","userMessage","role","type","content","prev","eventSource","fullResponse","done","timeoutId","setTimeout","close","onmessage","event","data","clearTimeout","last","length","slice","Object","assign","onerror","err","handleGetHelpNow","fullTranscript","map","m","join","res","post","chat_history","success","chat_room_id","log","alert","pickImage","result","launchCameraAsync","base64","canceled","base64Image","assets","renderItem","item","index","style","message","user","assistant","children","source","uri","fileName","_jsxFileName","lineNumber","columnNumber","color","id","chatRoomId","sender","container","behavior","OS","undefined","keyboardVerticalOffset","keyExtractor","idx","contentContainerStyle","paddingBottom","inputRow","placeholder","value","onChangeText","editable","title","onPress","disabled","imageBtn","fontSize","manualRow","marginTop","size","primary","create","flex","padding","paddingTop","backgroundColor","background","marginVertical","borderRadius","maxWidth","alignSelf","card","flexDirection","alignItems","borderWidth","borderColor","border","marginRight","width","height","marginLeft","userText","assistantText"],"sources":["/Users/michaelverwaayen/RFQ/mobile/ChatScreen.js"],"sourcesContent":["import { EventSourcePolyfill } from 'event-source-polyfill';\nimport React, { useState } from 'react';\nimport {\n  View,\n  TextInput,\n  Button,\n  FlatList,\n  Text,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n  ActivityIndicator\n} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport axios from 'axios';\nimport ChatRoom from './ChatRoom';\n\nimport { useTheme } from './ThemeContext';\n\nexport default function ChatScreen() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sending, setSending] = useState(false);\n  const [urgentChatId, setUrgentChatId] = useState(null);\n  const [inUrgentChat, setInUrgentChat] = useState(false);\n  const { theme } = useTheme();\n  const styles = getStyles(theme);\n\nconst sendMessage = async (text = null, image = null) => {\n  if (!text && !image) return;\n\n  // Construct query safely\n  let query = '';\n  try {\n    query = new URLSearchParams({\n      text: text || '',\n      image: image || '',\n    }).toString();\n  } catch (e) {\n    console.error('❌ Failed to build query string:', e);\n    return;\n  }\n\n  // Validate base64 image input (basic check)\n  if (image && !image.startsWith('data:image/')) {\n    console.warn('⚠️ Invalid image format submitted.');\n    return;\n  }\n\n  const userMessage = {\n    role: 'user',\n    type: image ? 'image' : 'text',\n    content: text || image,\n  };\n  setMessages(prev => [...prev, userMessage]);\n  setInput('');\n  setSending(true);\n\n  try {\n    const eventSource = new EventSourcePolyfill(\n      `http://localhost:3000/chat?${query}`\n    );\n\n    let fullResponse = '';\n    let done = false;\n\n    // Optional: Failsafe timeout\n    const timeoutId = setTimeout(() => {\n      if (!done) {\n        console.warn('⏰ SSE timed out. Closing connection.');\n        eventSource.close();\n        setSending(false);\n        setMessages(prev => [\n          ...prev,\n          {\n            role: 'assistant',\n            type: 'text',\n            content: 'Sorry, the server timed out.',\n          },\n        ]);\n      }\n    }, 30000); // 30 seconds\n\n    eventSource.onmessage = (event) => {\n      if (done) return; // prevent handling after done\n      if (event.data === '[DONE]') {\n        done = true;\n        clearTimeout(timeoutId);\n        setSending(false);\n        eventSource.close();\n        return;\n      }\n\n      fullResponse += event.data;\n      setMessages(prev => {\n        const last = prev[prev.length - 1];\n        if (last?.role === 'assistant') {\n          return [...prev.slice(0, -1), { ...last, content: fullResponse }];\n        } else {\n          return [...prev, { role: 'assistant', type: 'text', content: event.data }];\n        }\n      });\n    };\n\n    eventSource.onerror = (e) => {\n      if (!done) {\n        console.error('🔥 SSE stream error:', e);\n        setMessages(prev => [\n          ...prev,\n          {\n            role: 'assistant',\n            type: 'text',\n            content: 'There was a connection issue. Please try again.',\n          },\n        ]);\n        clearTimeout(timeoutId);\n        setSending(false);\n        eventSource.close();\n      }\n    };\n  } catch (err) {\n    console.error('❌ Error sending message:', err);\n    setMessages(prev => [\n      ...prev,\n      {\n        role: 'assistant',\n        type: 'text',\n        content: 'Something went wrong. Please try again.',\n      },\n    ]);\n    setSending(false);\n  }\n};\n\n\n\n  const handleGetHelpNow = async () => {\n    const fullTranscript = messages.map(m => m.content).join('\\n');\n    try {\n      const res = await axios.post('https://rfq-a1og.onrender.com/dispatch_urgent_vendor', {\n        chat_history: fullTranscript\n      });\n\n      if (res.data.success && res.data.chat_room_id) {\n        console.log('🚀 Urgent chat initiated:', res.data.chat_room_id);\n        setUrgentChatId(res.data.chat_room_id);\n        setInUrgentChat(true);\n      } else {\n        alert('No vendor available right now. Continuing with RFQ.');\n      }\n    } catch (err) {\n      console.error('Urgent dispatch failed:', err);\n      alert('Something went wrong while dispatching.');\n    }\n  };\n\n  const pickImage = async () => {\n    const result = await ImagePicker.launchCameraAsync({ base64: true });\n    if (!result.canceled) {\n      const base64Image = `data:image/jpeg;base64,${result.assets[0].base64}`;\n      sendMessage(null, base64Image);\n    }\n  };\n\n  const renderItem = ({ item, index }) => (\n    <View\n      key={item.id || index}\n      style={[styles.message, item.role === 'user' ? styles.user : styles.assistant]}\n    >\n      {item.type === 'image' && item.content ? (\n        <Image source={{ uri: item.content }} style={styles.image} />\n      ) : (\n        <Text style={{ color: item.role === 'assistant' ? 'orange' : theme.text }}>\n  {item.content || '⚠️ Empty message'}\n</Text>\n      )}\n    </View>\n  );\n\n  console.log('Rendering ChatScreen', { messages, sending, inUrgentChat, urgentChatId });\n\n  if (inUrgentChat && urgentChatId) {\n    console.log('🎯 Entering urgent chat');\n    return <ChatRoom chatRoomId={urgentChatId} sender=\"user@example.com\" />;\n  }\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n      keyboardVerticalOffset={100}\n    >\n      <FlatList\n        data={messages}\n        renderItem={renderItem}\n        keyExtractor={(item, idx) => item.id?.toString() || idx.toString()}\n        contentContainerStyle={{ paddingBottom: 20 }}\n      />\n      <View style={styles.inputRow}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Describe your issue...\"\n          value={input}\n          onChangeText={setInput}\n          editable={!sending}\n        />\n        <Button title=\"Send\" onPress={() => sendMessage(input)} disabled={sending} />\n        <TouchableOpacity onPress={pickImage} style={styles.imageBtn}>\n          <Text style={{ fontSize: 20 }}>📷</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.manualRow}>\n        <Button title=\"🚨 Get Help Now\" onPress={handleGetHelpNow} disabled={sending} />\n      </View>\n      {sending && <ActivityIndicator style={{ marginTop: 10 }} size=\"small\" color={theme.primary} />}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst getStyles = (theme) =>\n  StyleSheet.create({\n    container: { flex: 1, padding: 10, paddingTop: 50, backgroundColor: theme.background },\n    message: { padding: 10, marginVertical: 5, borderRadius: 8, maxWidth: '80%' },\n    user: { alignSelf: 'flex-end', backgroundColor: theme.card },\n    assistant: { alignSelf: 'flex-start', backgroundColor: theme.card },\n    inputRow: { flexDirection: 'row', alignItems: 'center', marginTop: 10 },\n    input: { flex: 1, borderWidth: 1, borderColor: theme.border, borderRadius: 5, padding: 10, marginRight: 5, color: theme.text },\n    image: { width: 150, height: 150, borderRadius: 8 },\n    imageBtn: { marginLeft: 5, padding: 8 },\n    manualRow: { marginTop: 10 },\n    userText: {\n  color: '#FFFFFF'  // white for user messages\n},\nassistantText: {\n  color: '#FFA500'  // orange for assistant messages\n}\n  });\n\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}